<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   	xmlns:aop="http://www.springframework.org/schema/aop"
   	xmlns:context="http://www.springframework.org/schema/context"
   	xmlns:tx="http://www.springframework.org/schema/tx"
   	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
      	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
      	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
      	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd"> 	 
   
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" autowire="autodetect">
    	<property name="dataSource" ref="dataSource" />
    	<!-- Don't forget to list all your entity classes here -->
    	<property name="annotatedClasses">
        	<list>
				<value>com.smiechmateusz.model.Article</value>
				<value>com.smiechmateusz.model.Image</value>
				<value>com.smiechmateusz.model.Category</value>
				<value>com.smiechmateusz.model.MyUser</value>
				<value>com.smiechmateusz.model.Role</value>
        	</list>
    	</property>

    	<property name="hibernateProperties">
        	<props>
            	<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
            </props>
    	</property>
	</bean>	 
    
	<!-- Spring bean configuration. Tell Spring to bounce off BoneCP -->
	<bean id="dataSource"
      	class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
    	<property name="targetDataSource">
        	<ref local="mainDataSource" />
    	</property>
	</bean>
       	 
	<!-- BoneCP configuration -->
	<bean id="mainDataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
    	<property name="driverClass" value="com.mysql.jdbc.Driver" />
    	<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/java" />
    	<property name="username" value="root"/>
    	<property name="password" value="toor"/>
    	<property name="idleConnectionTestPeriod" value="60"/>
    	<property name="idleMaxAge" value="240"/> 	 
    	<property name="maxConnectionsPerPartition" value="60"/>
    	<property name="minConnectionsPerPartition" value="20"/>
    	<property name="partitionCount" value="3"/>
    	<property name="acquireIncrement" value="10"/>                         	 
    	<property name="statementsCacheSize" value="50"/>
    	<property name="releaseHelperThreads" value="3"/>
	</bean>
    
	<bean id="txManager"
      	class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    	<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="txManager" />
    <context:annotation-config />
    
   	 <bean id="hibernateConfiguration" factory-bean="&amp;sessionFactory" factory-method="getConfiguration" /> <!-- Ampersand to taki myk Springowy.-->
    
	<!-- Note the usage of abstract="true" and parent="AbstractHibernateDAO" in the implementations-->
	<bean id="AbstractHibernateDAO" abstract="true"
      	class="com.smiechmateusz.dao.AbstractDAO"/>
	<bean id="ImageDAO" parent="AbstractHibernateDAO" class="com.smiechmateusz.dao.ImageDAO" />
	<bean id="ArticleDAO" parent="AbstractHibernateDAO" class="com.smiechmateusz.dao.ArticleDAO" />
	<bean id="CategoryDAO" parent="AbstractHibernateDAO" class="com.smiechmateusz.dao.CategoryDAO" />
	<bean id="UserDAO" parent="AbstractHibernateDAO" class="com.smiechmateusz.dao.UserDAO"/>
	<bean id="RoleDAO" parent="AbstractHibernateDAO" class="com.smiechmateusz.dao.RoleDAO" />
	
	<aop:aspectj-autoproxy />
	<bean id="authenticationAspect" class="com.smiechmateusz.controller.authenticate.Authentication" />
</beans>
